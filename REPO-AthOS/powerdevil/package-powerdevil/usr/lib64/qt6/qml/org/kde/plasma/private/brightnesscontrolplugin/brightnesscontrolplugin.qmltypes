import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "keyboardbrightnesscontrol.h"
        name: "KeyboardBrightnessControl"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "org.kde.plasma.private.brightnesscontrolplugin/KeyboardBrightnessControl 254.0"
        ]
        exportMetaObjectRevisions: [65024]
        Property {
            name: "brightness"
            type: "int"
            bindable: "bindableBrightness"
            read: "default"
            write: "setBrightness"
            notify: "brightnessChanged"
            index: 0
        }
        Property {
            name: "brightnessMax"
            type: "int"
            bindable: "bindableBrightnessMax"
            read: "default"
            notify: "brightnessMaxChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "isBrightnessAvailable"
            type: "bool"
            bindable: "bindableIsBrightnessAvailable"
            read: "default"
            notify: "isBrightnessAvailableChanged"
            index: 2
            isReadonly: true
        }
        Property { name: "isSilent"; type: "bool"; write: "setIsSilent"; index: 3 }
        Signal {
            name: "brightnessChanged"
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "brightnessMaxChanged"
            Parameter { name: "value"; type: "int" }
        }
        Signal {
            name: "isBrightnessAvailableChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Method {
            name: "onBrightnessChanged"
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "onBrightnessMaxChanged"
            Parameter { name: "value"; type: "int" }
        }
    }
    Component {
        file: "keyboardcolorcontrol.h"
        name: "KeyboardColorControl"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "org.kde.plasma.private.brightnesscontrolplugin/KeyboardColorControl 254.0"
        ]
        exportMetaObjectRevisions: [65024]
        Property {
            name: "supported"
            type: "bool"
            read: "isSupported"
            index: 0
            isReadonly: true
            isFinal: true
            isConstant: true
        }
        Property {
            name: "enabled"
            type: "bool"
            read: "enabled"
            write: "setEnabled"
            notify: "enabledChanged"
            index: 1
            isFinal: true
        }
        Signal { name: "enabledChanged" }
    }
    Component {
        file: "nightlightcontrol.h"
        name: "NightLightControl"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "org.kde.plasma.private.brightnesscontrolplugin/NightLightControl 254.0"
        ]
        exportMetaObjectRevisions: [65024]
        Property {
            name: "available"
            type: "bool"
            read: "isAvailable"
            notify: "availableChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "enabled"
            type: "bool"
            read: "isEnabled"
            notify: "enabledChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "running"
            type: "bool"
            read: "isRunning"
            notify: "runningChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "inhibited"
            type: "bool"
            read: "isInhibited"
            notify: "inhibitedChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "inhibitedFromApplet"
            type: "bool"
            read: "isInhibitedFromApplet"
            notify: "inhibitedFromAppletChanged"
            index: 4
            isReadonly: true
        }
        Property {
            name: "mode"
            type: "int"
            read: "mode"
            notify: "modeChanged"
            index: 5
            isReadonly: true
        }
        Property {
            name: "daylight"
            type: "bool"
            read: "isDaylight"
            notify: "daylightChanged"
            index: 6
            isReadonly: true
        }
        Property {
            name: "currentTemperature"
            type: "int"
            read: "currentTemperature"
            notify: "currentTemperatureChanged"
            index: 7
            isReadonly: true
        }
        Property {
            name: "targetTemperature"
            type: "int"
            read: "targetTemperature"
            notify: "targetTemperatureChanged"
            index: 8
            isReadonly: true
        }
        Property {
            name: "currentTransitionEndTime"
            type: "qulonglong"
            read: "currentTransitionEndTime"
            notify: "currentTransitionEndTimeChanged"
            index: 9
            isReadonly: true
        }
        Property {
            name: "scheduledTransitionStartTime"
            type: "qulonglong"
            read: "scheduledTransitionStartTime"
            notify: "scheduledTransitionStartTimeChanged"
            index: 10
            isReadonly: true
        }
        Signal { name: "availableChanged" }
        Signal { name: "enabledChanged" }
        Signal { name: "runningChanged" }
        Signal { name: "inhibitedChanged" }
        Signal { name: "inhibitedFromAppletChanged" }
        Signal { name: "modeChanged" }
        Signal { name: "daylightChanged" }
        Signal { name: "currentTemperatureChanged" }
        Signal { name: "targetTemperatureChanged" }
        Signal { name: "currentTransitionEndTimeChanged" }
        Signal { name: "scheduledTransitionStartTimeChanged" }
        Method { name: "toggleInhibition" }
        Method {
            name: "handlePropertiesChanged"
            Parameter { name: "interfaceName"; type: "QString" }
            Parameter { name: "changedProperties"; type: "QVariantMap" }
            Parameter { name: "invalidatedProperties"; type: "QStringList" }
        }
    }
    Component {
        file: "screenbrightnesscontrol.h"
        name: "ScreenBrightnessControl"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "org.kde.plasma.private.brightnesscontrolplugin/ScreenBrightnessControl 254.0"
        ]
        exportMetaObjectRevisions: [65024]
        Enum {
            name: "StepAction"
            type: "uint"
            values: ["Increase", "Decrease", "IncreaseSmall", "DecreaseSmall"]
        }
        Property {
            name: "displays"
            type: "QAbstractListModel"
            isPointer: true
            read: "displays"
            index: 0
            isReadonly: true
            isConstant: true
        }
        Property {
            name: "isBrightnessAvailable"
            type: "bool"
            bindable: "bindableIsBrightnessAvailable"
            read: "default"
            notify: "isBrightnessAvailableChanged"
            index: 1
            isReadonly: true
        }
        Property { name: "isSilent"; type: "bool"; index: 2 }
        Signal {
            name: "isBrightnessAvailableChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Method {
            name: "setBrightness"
            Parameter { name: "displayName"; type: "QString" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "onGlobalPropertiesChanged"
            Parameter { name: "ifaceName"; type: "QString" }
            Parameter { name: "changedProps"; type: "QVariantMap" }
            Parameter { name: "invalidatedProps"; type: "QStringList" }
        }
        Method {
            name: "onBrightnessChanged"
            Parameter { name: "displayName"; type: "QString" }
            Parameter { name: "value"; type: "int" }
            Parameter { name: "sourceClientName"; type: "QString" }
            Parameter { name: "sourceClientContext"; type: "QString" }
        }
        Method {
            name: "onBrightnessRangeChanged"
            Parameter { name: "displayName"; type: "QString" }
            Parameter { name: "max"; type: "int" }
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "adjustBrightnessRatio"
            Parameter { name: "delta"; type: "double" }
        }
        Method {
            name: "adjustBrightnessStep"
            Parameter { name: "stepAction"; type: "StepAction" }
        }
    }
}
