import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "powermanagementcontrol.h"
        name: "PowerManagementControl"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "org.kde.plasma.private.batterymonitor/PowerManagementControl 254.0"
        ]
        exportMetaObjectRevisions: [65024]
        Property {
            name: "inhibitions"
            type: "QVariantMap"
            isList: true
            bindable: "bindableInhibitions"
            read: "default"
            notify: "inhibitionsChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "blockedInhibitions"
            type: "QVariantMap"
            isList: true
            bindable: "bindableBlockedInhibitions"
            read: "default"
            notify: "blockedInhibitionsChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "hasInhibition"
            type: "bool"
            bindable: "bindableHasInhibition"
            read: "default"
            notify: "hasInhibitionChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "isLidPresent"
            type: "bool"
            bindable: "bindableIsLidPresent"
            read: "default"
            notify: "isLidPresentChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "triggersLidAction"
            type: "bool"
            bindable: "bindableTriggersLidAction"
            read: "default"
            notify: "triggersLidActionChanged"
            index: 4
            isReadonly: true
        }
        Property {
            name: "isManuallyInhibited"
            type: "bool"
            bindable: "bindableIsManuallyInhibited"
            read: "default"
            notify: "isManuallyInhibitedChanged"
            index: 5
            isReadonly: true
        }
        Property {
            name: "isManuallyInhibitedError"
            type: "bool"
            bindable: "bindableIsManuallyInhibitedError"
            read: "default"
            write: "default"
            notify: "isManuallyInhibitedErrorChanged"
            index: 6
        }
        Property { name: "isSilent"; type: "bool"; read: "isSilent"; write: "setIsSilent"; index: 7 }
        Signal {
            name: "inhibitionsChanged"
            Parameter { name: "inhibitions"; type: "QVariantMap"; isList: true }
        }
        Signal {
            name: "blockedInhibitionsChanged"
            Parameter { name: "inhibitions"; type: "QVariantMap"; isList: true }
        }
        Signal {
            name: "hasInhibitionChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "isLidPresentChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "triggersLidActionChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "isManuallyInhibitedChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "isManuallyInhibitedErrorChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Method {
            name: "onServiceRegistered"
            Parameter { name: "serviceName"; type: "QString" }
        }
        Method {
            name: "onServiceUnregistered"
            Parameter { name: "serviceName"; type: "QString" }
        }
        Method {
            name: "onInhibitionsChanged"
            Parameter { name: "added"; type: "InhibitionInfo"; isList: true }
            Parameter { name: "removed"; type: "QStringList" }
        }
        Method {
            name: "onPermanentlyBlockedInhibitionsChanged"
            Parameter { name: "added"; type: "InhibitionInfo"; isList: true }
            Parameter { name: "removed"; type: "InhibitionInfo"; isList: true }
        }
        Method {
            name: "onTemporarilyBlockedInhibitionsChanged"
            Parameter { name: "added"; type: "InhibitionInfo"; isList: true }
            Parameter { name: "removed"; type: "InhibitionInfo"; isList: true }
        }
        Method {
            name: "onHasInhibitionChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Method {
            name: "onIsManuallyInhibitedChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Method {
            name: "onisManuallyInhibitedErrorChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Method {
            name: "inhibit"
            Parameter { name: "reason"; type: "QString" }
        }
        Method { name: "uninhibit" }
        Method {
            name: "blockInhibition"
            Parameter { name: "appName"; type: "QString" }
            Parameter { name: "reason"; type: "QString" }
            Parameter { name: "permanently"; type: "bool" }
        }
        Method {
            name: "blockInhibition"
            isCloned: true
            Parameter { name: "appName"; type: "QString" }
            Parameter { name: "reason"; type: "QString" }
        }
        Method {
            name: "unblockInhibition"
            Parameter { name: "appName"; type: "QString" }
            Parameter { name: "reason"; type: "QString" }
            Parameter { name: "permanently"; type: "bool" }
        }
        Method {
            name: "unblockInhibition"
            isCloned: true
            Parameter { name: "appName"; type: "QString" }
            Parameter { name: "reason"; type: "QString" }
        }
    }
    Component {
        file: "powerprofilescontrol.h"
        name: "PowerProfilesControl"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: [
            "org.kde.plasma.private.batterymonitor/PowerProfilesControl 254.0"
        ]
        exportMetaObjectRevisions: [65024]
        Property {
            name: "isPowerProfileDaemonInstalled"
            type: "bool"
            bindable: "bindableIsPowerProfileDaemonInstalled"
            read: "default"
            notify: "isPowerProfileDaemonInstalledChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "profiles"
            type: "QStringList"
            bindable: "bindableProfiles"
            read: "default"
            notify: "profilesChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "configuredProfile"
            type: "QString"
            bindable: "bindableConfiguredProfile"
            read: "default"
            notify: "configuredProfileChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "activeProfile"
            type: "QString"
            bindable: "bindableActiveProfile"
            read: "default"
            notify: "activeProfileChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "profileError"
            type: "QString"
            bindable: "bindableProfileError"
            read: "default"
            write: "default"
            notify: "profileErrorChanged"
            index: 4
        }
        Property {
            name: "inhibitionReason"
            type: "QString"
            bindable: "bindableInhibitionReason"
            read: "default"
            notify: "inhibitionReasonChanged"
            index: 5
            isReadonly: true
        }
        Property {
            name: "degradationReason"
            type: "QString"
            bindable: "bindableDegradationReason"
            read: "default"
            notify: "degradationReasonChanged"
            index: 6
            isReadonly: true
        }
        Property {
            name: "profileHolds"
            type: "QVariantMap"
            isList: true
            bindable: "bindableProfileHolds"
            read: "default"
            notify: "profileHoldsChanged"
            index: 7
            isReadonly: true
        }
        Property { name: "isSilent"; type: "bool"; read: "isSilent"; write: "setIsSilent"; index: 8 }
        Property {
            name: "isTlpInstalled"
            type: "bool"
            bindable: "bindableIsTlpInstalled"
            read: "default"
            notify: "isTlpInstallChanged"
            index: 9
            isReadonly: true
        }
        Signal {
            name: "isPowerProfileDaemonInstalledChanged"
            Parameter { name: "status"; type: "bool" }
        }
        Signal {
            name: "profilesChanged"
            Parameter { name: "profiles"; type: "QStringList" }
        }
        Signal {
            name: "configuredProfileChanged"
            Parameter { name: "profile"; type: "QString" }
        }
        Signal {
            name: "activeProfileChanged"
            Parameter { name: "profile"; type: "QString" }
        }
        Signal {
            name: "profileErrorChanged"
            Parameter { name: "status"; type: "QString" }
        }
        Signal {
            name: "inhibitionReasonChanged"
            Parameter { name: "reason"; type: "QString" }
        }
        Signal {
            name: "degradationReasonChanged"
            Parameter { name: "reason"; type: "QString" }
        }
        Signal {
            name: "profileHoldsChanged"
            Parameter { name: "profileHolds"; type: "QVariantMap"; isList: true }
        }
        Signal {
            name: "isTlpInstallChanged"
            Parameter { name: "installed"; type: "bool" }
        }
        Method {
            name: "onServiceRegistered"
            Parameter { name: "serviceName"; type: "QString" }
        }
        Method {
            name: "onServiceUnregistered"
            Parameter { name: "serviceName"; type: "QString" }
        }
        Method {
            name: "updatePowerProfileChoices"
            Parameter { name: "choices"; type: "QStringList" }
        }
        Method {
            name: "updatePowerProfileConfiguredProfile"
            Parameter { name: "profile"; type: "QString" }
        }
        Method {
            name: "updatePowerProfileCurrentProfile"
            Parameter { name: "profile"; type: "QString" }
        }
        Method {
            name: "updatePowerProfilePerformanceInhibitedReason"
            Parameter { name: "reason"; type: "QString" }
        }
        Method {
            name: "updatePowerProfilePerformanceDegradedReason"
            Parameter { name: "reason"; type: "QString" }
        }
        Method {
            name: "updatePowerProfileHolds"
            Parameter { name: "holds"; type: "QVariantMap"; isList: true }
        }
        Method {
            name: "setProfile"
            Parameter { name: "reason"; type: "QString" }
        }
    }
}
