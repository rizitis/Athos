Packager="Anagnostakis Ioannis <rizitis@gmail.com> GR"

Homepage="localhost"
        #|--------------------------------------|#
SortDesc="plasma-apps-meta"
LongDesc="plasma apps meta package"
VERSION=6.2.3
PRGNAM=plasma-apps-meta
SRCNAM=plasma-apps-meta
# Source download link
SRCURL=
COMPRESS=
GITCHEK=
# Empty if not mdsum check needed.
MDSCHK=
BIN_PKG=
# Add required and optional deps if needed in parenthesis. (foo foo1 foo2)
REQUIRED=(alligator angelfish arianna audiotube calindori discover  drkonqi elisa flatpak-kcm haruna itinerary kasts kclock kdeconnect kdeconnect-nftables keysmith kirigami-addons kirigami-gallery klevernotes knewstuff kongress kontrast krecorder ktrip kweather kwin kwin-dbg libplasma marknote mauikit mauikit-accounts mauikit-archiver mauikit-documents mauikit-filebrowsing mauikit-imagetools mauikit-terminal mauikit-texteditor mauiman merkuro neochat okular plasma-camera plasma-desktop plasma-disks plasma-firewall plasma-nm plasma-pa plasma-phonebook plasma-sdk plasma-settings plasma-systemmonitor plasma-welcome plasma-workspace plasmatube qmlkonsole qqc2-breeze-style qrca spacebar systemsettings telly-skout tokodon vakzination)
OPTDEPS=

BUILD=${BUILD:-1}
TAG=${TAG:-_rtz}
PKGTYPE=${PKGTYPE:-tlz}
PKG="$CWD"/package-$PRGNAM
TMP="$CWD"/work
OUTPUT=/tmp/"$PRGNAM"
ARCH=x86_64

set -e

cd "$W_DIR"/"$package" || exit 1
CWD=$(pwd)
DATE="$(date)"
# Setup build log file
LOGFILE=/tmp/"$package"-build.log
# shellcheck disable=SC2086
rm $LOGFILE || true
exec > >(tee -a "$LOGFILE") 2>&1


NUMJOBS=${NUMJOBS:-"-j$(getconf _NPROCESSORS_ONLN)"}
# This is for slackdesk app. If not installed then a slack-desc must exist in package folder as usually.
mkdesc="$(which slackdesc)" || true

echo "Starting build process..."
start_time=$(date +%s)

# Check for required deps pkg.ini, scan system if installed if not try to find them in $W_DIR for build install.
check_deps() {
    if [ -n "$REQUIRED" ]; then
        echo "Required dependencies: ${REQUIRED[@]}"

        for buildpkg in "${REQUIRED[@]}"; do
            if [ -z "$(ls /var/adm/packages | grep ^$buildpkg-[0-9])" ]; then
                echo "Building dep $buildpkg..."
                athos "$buildpkg"
            else
                echo "$buildpkg is already installed!"
            fi
        done
    else
        echo "No required dependencies specified."
    fi
}
check_deps

# The same as check_deps but for optional deps first ask to build install or not...
opt_deps() {
    if [ -n "$OPTDEPS" ]; then
        echo "Found $OPTDEPS"
        read -p "Should check and build optional deps if not installed? (yes/no): " answer
        answer=$(echo "$answer" | tr '[:upper:]' '[:lower:]')

        if [[ "$answer" =~ ^(yes|y)$ ]]; then
            for buildopt in "${OPTDEPS[@]}"; do
                if [ -z "$(ls /var/adm/packages | grep ^$buildopt-[0-9])" ]; then
                    echo "Building optional dep $buildopt..."
                    athos "$buildopt"
                else
                    echo "$buildopt is already installed!"
                fi
            done
        elif [[ "$answer" =~ ^(no|n)$ ]]; then
            echo "You answered no."
        else
            echo "Invalid response. I will take that as NO."
        fi
    else
        echo "No optional dependencies found."
    fi
}
opt_deps

mkdir -p "$PKG"/install
if [ -f "$CWD"/slack-desc ]; then
	  cat "$CWD"/slack-desc > "$PKG"/install/slack-desc
	 elif [ -x "$mkdesc" ]; then
	  $mkdesc "$PRGNAM" "$SortDesc" "$LongDesc" "$Homepage" > "$PKG"/install/slack-desc
	 else
	  echo " "
	  echo "Not slack-desc found or created   :-("
	  echo "You must have a slack-desc in $CWD"
	  echo "Or you must create one."
	  echo " "
	  exit 1
	fi

mkdir -p "$PKG"/usr/doc/"$PRGNAM"-"$VERSION"
cat "$CWD"/"$PRGNAM".ini > "$PKG"/usr/doc/"$PRGNAM"-"$VERSION"/"$PRGNAM".ini

cd "$PKG" || exit
  makepkg --remove-rpaths -l y -c n "$OUTPUT"/$PRGNAM-"$VERSION"-"$ARCH"-"$BUILD""$TAG"."$PKGTYPE" 2>&1 | tee "$OUTPUT"/makepkg-${PRGNAM}.log
	  echo "$DATE $Packager" | sed -e '1r /dev/stdin' "$OUTPUT/makepkg-${PRGNAM}.log" > "$OUTPUT/makepkg-${PRGNAM}.log.tmp" && mv "$OUTPUT/makepkg-${PRGNAM}.log.tmp" "$OUTPUT/makepkg-${PRGNAM}.log"


	  cd "$OUTPUT" || exit
	  md5sum $PRGNAM-"$VERSION"-"$ARCH"-"$BUILD""$TAG"."$PKGTYPE" > $PRGNAM-"$VERSION"-"$ARCH"-"$BUILD""$TAG"."$PKGTYPE".md5
	  # shellcheck disable=SC2002
	  cat "$PKG"/install/slack-desc | grep "^${PRGNAM}" > $PRGNAM-"$VERSION"-"$ARCH"-"$BUILD""$TAG"."$PKGTYPE".txt
	  cat $PRGNAM-"$VERSION"-"$ARCH"-"$BUILD""$TAG"."$PKGTYPE".txt > README
# optional installpkg
upgradepkg --install-new --reinstall "$OUTPUT"/$PRGNAM-"$VERSION"-"$ARCH"-"$BUILD""$TAG"."$PKGTYPE"
# Calculate and display build time
end_time=$(date +%s)
elapsed_time=$((end_time - start_time))
echo "Build process completed in $((elapsed_time / 60)) minutes and $((elapsed_time % 60)) seconds."
chmod -R 775 "$W_DIR"/"$package"
exit
exit 0
)

