From d4a3d39ed4d01120fde5a7c6138a28497a00c286 Mon Sep 17 00:00:00 2001
From: James Graham <james.h.graham@protonmail.com>
Date: Fri, 25 Oct 2024 16:11:06 +0000
Subject: [PATCH 1/5] Update for the API changes to RoomMessageEvent in
 libquotient 0.9

(cherry picked from commit 16df22af684dacddc8ecd5b017566e62cc09e3b4)

16df22af Update for the API changes to RoomMessageEvent in libquotient 0.9

Co-authored-by: James Graham <james.h.graham@protonmail.com>
---
 src/actionshandler.cpp | 4 ++++
 src/eventhandler.cpp   | 8 ++++++++
 src/neochatroom.cpp    | 4 ++++
 3 files changed, 16 insertions(+)

diff --git a/src/actionshandler.cpp b/src/actionshandler.cpp
index e5ddaadbd1..268c162a50 100644
--- a/src/actionshandler.cpp
+++ b/src/actionshandler.cpp
@@ -94,7 +94,11 @@ void ActionsHandler::handleMessage(const QString &text, QString handledText, Cha
                     if (event->senderId() == m_room->localMember().id() && event->hasTextContent()) {
                         QString originalString;
                         if (event->content()) {
+#if Quotient_VERSION_MINOR > 8
+                            originalString = static_cast<const Quotient::EventContent::TextContent *>(event->content().get())->body;
+#else
                             originalString = static_cast<const Quotient::EventContent::TextContent *>(event->content())->body;
+#endif
                         } else {
                             originalString = event->plainBody();
                         }
diff --git a/src/eventhandler.cpp b/src/eventhandler.cpp
index 8cad14601f..0d857799c6 100644
--- a/src/eventhandler.cpp
+++ b/src/eventhandler.cpp
@@ -246,7 +246,11 @@ QString EventHandler::rawMessageBody(const Quotient::RoomMessageEvent &event)
     }
 
     if (event.hasTextContent() && event.content()) {
+#if Quotient_VERSION_MINOR > 8
+        body = static_cast<const EventContent::TextContent *>(event.content().get())->body;
+#else
         body = static_cast<const EventContent::TextContent *>(event.content())->body;
+#endif
     } else {
         body = event.plainBody();
     }
@@ -474,7 +478,11 @@ QString EventHandler::getMessageBody(const RoomMessageEvent &event, Qt::TextForm
 
     QString body;
     if (event.hasTextContent() && event.content()) {
+#if Quotient_VERSION_MINOR > 8
+        body = static_cast<const EventContent::TextContent *>(event.content().get())->body;
+#else
         body = static_cast<const EventContent::TextContent *>(event.content())->body;
+#endif
     } else {
         body = event.plainBody();
     }
diff --git a/src/neochatroom.cpp b/src/neochatroom.cpp
index f5b1eb57bd..01d8bf3dd5 100644
--- a/src/neochatroom.cpp
+++ b/src/neochatroom.cpp
@@ -397,7 +397,11 @@ bool NeoChatRoom::lastEventIsSpoiler() const
     if (auto event = lastEvent()) {
         if (auto e = eventCast<const RoomMessageEvent>(event)) {
             if (e->hasTextContent() && e->content() && e->mimeType().name() == "text/html"_ls) {
+#if Quotient_VERSION_MINOR > 8
+                auto htmlBody = static_cast<const Quotient::EventContent::TextContent *>(e->content().get())->body;
+#else
                 auto htmlBody = static_cast<const Quotient::EventContent::TextContent *>(e->content())->body;
+#endif
                 return htmlBody.contains("data-mx-spoiler"_ls);
             }
         }
-- 
GitLab


From c82d61f04e2506b587f6e476b96619ed80e6bee6 Mon Sep 17 00:00:00 2001
From: James Graham <james.h.graham@protonmail.com>
Date: Tue, 15 Oct 2024 16:54:19 +0100
Subject: [PATCH 2/5] Make sure that content is kept alive so fileInfo can be
 used throughout the function

---
 src/eventhandler.cpp | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/eventhandler.cpp b/src/eventhandler.cpp
index 0d857799c6..5ef98d7a83 100644
--- a/src/eventhandler.cpp
+++ b/src/eventhandler.cpp
@@ -668,8 +668,9 @@ QVariantMap EventHandler::getMediaInfoForEvent(const Quotient::RoomEvent *event)
         }
 
         const EventContent::FileInfo *fileInfo;
-        fileInfo = roomMessageEvent->content()->fileInfo();
-        QVariantMap mediaInfo = getMediaInfoFromFileInfo(fileInfo, eventId, false, false);
+        const auto content = roomMessageEvent->content();
+        fileInfo = content->fileInfo();
+        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, fileInfo, eventId, false, false);
         // if filename isn't specifically given, it is in body
         // https://spec.matrix.org/latest/client-server-api/#mfile
         mediaInfo["filename"_ls] = (fileInfo->originalName.isEmpty()) ? roomMessageEvent->plainBody() : fileInfo->originalName;
-- 
GitLab


From 7fe6e42b1efd4ebca02c3c345086ed6cba8476c4 Mon Sep 17 00:00:00 2001
From: James Graham <james.h.graham@protonmail.com>
Date: Tue, 15 Oct 2024 23:27:24 +0100
Subject: [PATCH 3/5] Update for the latest event content changes to
 libquotient

---
 src/eventhandler.cpp               | 140 ++++++++++++++++++++++-------
 src/eventhandler.h                 |  14 ++-
 src/models/messagecontentmodel.cpp |  10 ++-
 src/neochatroom.cpp                |  30 +++++--
 4 files changed, 151 insertions(+), 43 deletions(-)

diff --git a/src/eventhandler.cpp b/src/eventhandler.cpp
index 5ef98d7a83..de59823661 100644
--- a/src/eventhandler.cpp
+++ b/src/eventhandler.cpp
@@ -9,6 +9,8 @@
 
 #include <Quotient/eventitem.h>
 #include <Quotient/events/encryptionevent.h>
+#include <Quotient/events/event.h>
+#include <Quotient/events/eventcontent.h>
 #include <Quotient/events/reactionevent.h>
 #include <Quotient/events/redactionevent.h>
 #include <Quotient/events/roomavatarevent.h>
@@ -237,7 +239,11 @@ QString EventHandler::rawMessageBody(const Quotient::RoomMessageEvent &event)
     if (event.hasFileContent()) {
         // if filename is given or body is equal to filename,
         // then body is a caption
+#if Quotient_VERSION_MINOR > 8
+        QString filename = event.fileContent()->originalName;
+#else
         QString filename = event.content()->fileInfo()->originalName;
+#endif
         QString body = event.plainBody();
         if (filename.isEmpty() || filename == body) {
             return QString();
@@ -247,7 +253,7 @@ QString EventHandler::rawMessageBody(const Quotient::RoomMessageEvent &event)
 
     if (event.hasTextContent() && event.content()) {
 #if Quotient_VERSION_MINOR > 8
-        body = static_cast<const EventContent::TextContent *>(event.content().get())->body;
+        body = event.richTextContent()->body;
 #else
         body = static_cast<const EventContent::TextContent *>(event.content())->body;
 #endif
@@ -466,10 +472,14 @@ QString EventHandler::getMessageBody(const RoomMessageEvent &event, Qt::TextForm
     TextHandler textHandler;
 
     if (event.hasFileContent()) {
-        auto fileCaption = event.content()->fileInfo()->originalName;
+#if Quotient_VERSION_MINOR > 8
+        QString fileCaption = event.fileContent()->originalName;
+#else
+        QString fileCaption = event.content()->fileInfo()->originalName;
+#endif
         if (fileCaption.isEmpty()) {
             fileCaption = event.plainBody();
-        } else if (event.content()->fileInfo()->originalName != event.plainBody()) {
+        } else if (fileCaption != event.plainBody()) {
             fileCaption = event.plainBody() + " | "_ls + fileCaption;
         }
         textHandler.setData(fileCaption);
@@ -479,7 +489,7 @@ QString EventHandler::getMessageBody(const RoomMessageEvent &event, Qt::TextForm
     QString body;
     if (event.hasTextContent() && event.content()) {
 #if Quotient_VERSION_MINOR > 8
-        body = static_cast<const EventContent::TextContent *>(event.content().get())->body;
+        body = event.richTextContent()->body;
 #else
         body = static_cast<const EventContent::TextContent *>(event.content())->body;
 #endif
@@ -667,36 +677,58 @@ QVariantMap EventHandler::getMediaInfoForEvent(const Quotient::RoomEvent *event)
             return {};
         }
 
-        const EventContent::FileInfo *fileInfo;
+#if Quotient_VERSION_MINOR > 8
         const auto content = roomMessageEvent->content();
-        fileInfo = content->fileInfo();
-        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, fileInfo, eventId, false, false);
+        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, static_cast<EventContent::FileContent *>(content.get()), eventId, false, false);
+#else
+        const auto content = static_cast<const EventContent::FileContent *>(roomMessageEvent->content());
+        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, content, eventId, false, false);
+#endif
         // if filename isn't specifically given, it is in body
         // https://spec.matrix.org/latest/client-server-api/#mfile
-        mediaInfo["filename"_ls] = (fileInfo->originalName.isEmpty()) ? roomMessageEvent->plainBody() : fileInfo->originalName;
+#if Quotient_VERSION_MINOR > 8
+        mediaInfo["filename"_ls] =
+            (roomMessageEvent->fileContent()->originalName.isEmpty()) ? roomMessageEvent->plainBody() : roomMessageEvent->fileContent()->originalName;
+#else
+        mediaInfo["filename"_ls] = (content->fileInfo()->originalName.isEmpty()) ? roomMessageEvent->plainBody() : content->fileInfo()->originalName;
+#endif
 
         return mediaInfo;
     } else if (event->is<StickerEvent>()) {
-        const EventContent::FileInfo *fileInfo;
-
         auto stickerEvent = eventCast<const StickerEvent>(event);
-        fileInfo = &stickerEvent->image();
+        auto content = &stickerEvent->image();
 
-        return getMediaInfoFromFileInfo(fileInfo, eventId, false, true);
+        return getMediaInfoFromFileInfo(room, content, eventId, false, true);
     } else {
         return {};
     }
 }
 
-QVariantMap EventHandler::getMediaInfoFromFileInfo(const EventContent::FileInfo *fileInfo, const QString &eventId, bool isThumbnail, bool isSticker) const
+QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
+#if Quotient_VERSION_MINOR > 8
+                                                   const Quotient::EventContent::FileContentBase *fileContent,
+#else
+                                                   const Quotient::EventContent::TypedBase *fileContent,
+#endif
+                                                   const QString &eventId,
+                                                   bool isThumbnail,
+                                                   bool isSticker)
 {
     QVariantMap mediaInfo;
 
     // Get the mxc URL for the media.
-    if (!fileInfo->url().isValid() || fileInfo->url().scheme() != QStringLiteral("mxc") || eventId.isEmpty()) {
+#if Quotient_VERSION_MINOR > 8
+    if (!fileContent->url().isValid() || fileContent->url().scheme() != QStringLiteral("mxc") || eventId.isEmpty()) {
+#else
+    if (!fileContent->fileInfo()->url().isValid() || fileContent->fileInfo()->url().scheme() != QStringLiteral("mxc") || eventId.isEmpty()) {
+#endif
         mediaInfo["source"_ls] = QUrl();
     } else {
-        QUrl source = m_room->makeMediaUrl(eventId, fileInfo->url());
+#if Quotient_VERSION_MINOR > 8
+        QUrl source = room->makeMediaUrl(eventId, fileContent->url());
+#else
+        QUrl source = room->makeMediaUrl(eventId, fileContent->fileInfo()->url());
+#endif
 
         if (source.isValid()) {
             mediaInfo["source"_ls] = source;
@@ -705,7 +737,7 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const EventContent::FileInfo
         }
     }
 
-    auto mimeType = fileInfo->mimeType;
+    auto mimeType = fileContent->type();
     // Add the MIME type for the media if available.
     mediaInfo["mimeType"_ls] = mimeType.name();
 
@@ -713,45 +745,53 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const EventContent::FileInfo
     mediaInfo["mimeIcon"_ls] = mimeType.iconName();
 
     // Add media size if available.
-    mediaInfo["size"_ls] = fileInfo->payloadSize;
+#if Quotient_VERSION_MINOR > 8
+    mediaInfo["size"_ls] = static_cast<const EventContent::FileContent *>(fileContent)->payloadSize;
+#else
+    mediaInfo["size"_ls] = static_cast<const EventContent::FileContent *>(fileContent)->fileInfo()->payloadSize;
+#endif
 
     mediaInfo["isSticker"_ls] = isSticker;
 
     // Add parameter depending on media type.
     if (mimeType.name().contains(QStringLiteral("image"))) {
-        if (auto castInfo = static_cast<const EventContent::ImageContent *>(fileInfo)) {
+        if (auto castInfo = static_cast<const EventContent::ImageContent *>(fileContent)) {
+#if Quotient_VERSION_MINOR > 8
             mediaInfo["width"_ls] = castInfo->imageSize.width();
             mediaInfo["height"_ls] = castInfo->imageSize.height();
+#else
+            const auto imageInfo = static_cast<const EventContent::ImageInfo *>(castInfo->fileInfo());
+            mediaInfo["width"_ls] = imageInfo->imageSize.width();
+            mediaInfo["height"_ls] = imageInfo->imageSize.height();
+#endif
 
             // TODO: Images in certain formats (e.g. WebP) will be erroneously marked as animated, even if they are static.
             mediaInfo["animated"_ls] = QMovie::supportedFormats().contains(mimeType.preferredSuffix().toUtf8());
 
-            if (!isThumbnail) {
-                QVariantMap tempInfo;
-                auto thumbnailInfo = getMediaInfoFromFileInfo(castInfo->thumbnailInfo(), eventId, true);
-                if (thumbnailInfo["source"_ls].toUrl().scheme() == "mxc"_ls) {
-                    tempInfo = thumbnailInfo;
+            QVariantMap tempInfo;
+            auto thumbnailInfo = getMediaInfoFromTumbnail(room, castInfo->thumbnail, eventId);
+            if (thumbnailInfo["source"_ls].toUrl().scheme() == "mxc"_ls) {
+                tempInfo = thumbnailInfo;
+            } else {
+                QString blurhash = castInfo->originalInfoJson["xyz.amorgan.blurhash"_ls].toString();
+                if (blurhash.isEmpty()) {
+                    tempInfo["source"_ls] = QUrl();
                 } else {
-                    QString blurhash = castInfo->originalInfoJson["xyz.amorgan.blurhash"_ls].toString();
-                    if (blurhash.isEmpty()) {
-                        tempInfo["source"_ls] = QUrl();
-                    } else {
-                        tempInfo["source"_ls] = QUrl("image://blurhash/"_ls + blurhash);
-                    }
+                    tempInfo["source"_ls] = QUrl("image://blurhash/"_ls + blurhash);
                 }
-                mediaInfo["tempInfo"_ls] = tempInfo;
             }
+            mediaInfo["tempInfo"_ls] = tempInfo;
         }
     }
     if (mimeType.name().contains(QStringLiteral("video"))) {
-        if (auto castInfo = static_cast<const EventContent::VideoContent *>(fileInfo)) {
+        if (auto castInfo = static_cast<const EventContent::VideoContent *>(fileContent)) {
             mediaInfo["width"_ls] = castInfo->imageSize.width();
             mediaInfo["height"_ls] = castInfo->imageSize.height();
             mediaInfo["duration"_ls] = castInfo->duration;
 
             if (!isThumbnail) {
                 QVariantMap tempInfo;
-                auto thumbnailInfo = getMediaInfoFromFileInfo(castInfo->thumbnailInfo(), eventId, true);
+                auto thumbnailInfo = getMediaInfoFromTumbnail(room, castInfo->thumbnail, eventId);
                 if (thumbnailInfo["source"_ls].toUrl().scheme() == "mxc"_ls) {
                     tempInfo = thumbnailInfo;
                 } else {
@@ -767,7 +807,7 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const EventContent::FileInfo
         }
     }
     if (mimeType.name().contains(QStringLiteral("audio"))) {
-        if (auto castInfo = static_cast<const EventContent::AudioContent *>(fileInfo)) {
+        if (auto castInfo = static_cast<const EventContent::AudioContent *>(fileContent)) {
             mediaInfo["duration"_ls] = castInfo->duration;
         }
     }
@@ -775,7 +815,39 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const EventContent::FileInfo
     return mediaInfo;
 }
 
-bool EventHandler::hasReply() const
+QVariantMap EventHandler::getMediaInfoFromTumbnail(const NeoChatRoom *room, const Quotient::EventContent::Thumbnail &thumbnail, const QString &eventId)
+{
+    QVariantMap thumbnailInfo;
+
+    if (!thumbnail.url().isValid() || thumbnail.url().scheme() != QStringLiteral("mxc") || eventId.isEmpty()) {
+        thumbnailInfo["source"_ls] = QUrl();
+    } else {
+        QUrl source = room->makeMediaUrl(eventId, thumbnail.url());
+
+        if (source.isValid()) {
+            thumbnailInfo["source"_ls] = source;
+        } else {
+            thumbnailInfo["source"_ls] = QUrl();
+        }
+    }
+
+    auto mimeType = thumbnail.mimeType;
+    // Add the MIME type for the media if available.
+    thumbnailInfo["mimeType"_ls] = mimeType.name();
+
+    // Add the MIME type icon if available.
+    thumbnailInfo["mimeIcon"_ls] = mimeType.iconName();
+
+    // Add media size if available.
+    thumbnailInfo["size"_ls] = thumbnail.payloadSize;
+
+    thumbnailInfo["width"_ls] = thumbnail.imageSize.width();
+    thumbnailInfo["height"_ls] = thumbnail.imageSize.height();
+
+    return thumbnailInfo;
+}
+
+bool EventHandler::hasReply(const Quotient::RoomEvent *event, bool showFallbacks)
 {
     if (m_event == nullptr) {
         qCWarning(EventHandling) << "hasReply called with m_event set to nullptr.";
diff --git a/src/eventhandler.h b/src/eventhandler.h
index 277273c9e8..866ea56e01 100644
--- a/src/eventhandler.h
+++ b/src/eventhandler.h
@@ -338,7 +338,15 @@ private:
     QString getBody(const Quotient::RoomEvent *event, Qt::TextFormat format, bool stripNewlines) const;
     QString getMessageBody(const Quotient::RoomMessageEvent &event, Qt::TextFormat format, bool stripNewlines) const;
 
-    QVariantMap getMediaInfoForEvent(const Quotient::RoomEvent *event) const;
-    QVariantMap
-    getMediaInfoFromFileInfo(const Quotient::EventContent::FileInfo *fileInfo, const QString &eventId, bool isThumbnail = false, bool isSticker = false) const;
+    static QVariantMap getMediaInfoForEvent(const NeoChatRoom *room, const Quotient::RoomEvent *event);
+    QVariantMap static getMediaInfoFromFileInfo(const NeoChatRoom *room,
+#if Quotient_VERSION_MINOR > 8
+                                                const Quotient::EventContent::FileContentBase *fileContent,
+#else
+                                                const Quotient::EventContent::TypedBase *fileContent,
+#endif
+                                                const QString &eventId,
+                                                bool isThumbnail = false,
+                                                bool isSticker = false);
+    static QVariantMap getMediaInfoFromTumbnail(const NeoChatRoom *room, const Quotient::EventContent::Thumbnail &thumbnail, const QString &eventId);
 };
diff --git a/src/models/messagecontentmodel.cpp b/src/models/messagecontentmodel.cpp
index 7de11f2740..6c925964cd 100644
--- a/src/models/messagecontentmodel.cpp
+++ b/src/models/messagecontentmodel.cpp
@@ -445,10 +445,18 @@ QList<MessageComponent> MessageContentModel::componentsForType(MessageComponentT
                 auto fileTransferInfo = m_room->cachedFileTransferInfo(m_event.get());
 
 #ifndef Q_OS_ANDROID
-                Q_ASSERT(event->content() != nullptr && event->content()->fileInfo() != nullptr);
+                Q_ASSERT(event->content() != nullptr && event->hasFileContent());
+#if Quotient_VERSION_MINOR > 8
+                const QMimeType mimeType = event->fileContent()->mimeType;
+#else
                 const QMimeType mimeType = event->content()->fileInfo()->mimeType;
+#endif
                 if (mimeType.name() == QStringLiteral("text/plain") || mimeType.parentMimeTypes().contains(QStringLiteral("text/plain"))) {
+#if Quotient_VERSION_MINOR > 8
+                    QString originalName = event->fileContent()->originalName;
+#else
                     QString originalName = event->content()->fileInfo()->originalName;
+#endif
                     if (originalName.isEmpty()) {
                         originalName = event->plainBody();
                     }
diff --git a/src/neochatroom.cpp b/src/neochatroom.cpp
index 01d8bf3dd5..79bcdfee67 100644
--- a/src/neochatroom.cpp
+++ b/src/neochatroom.cpp
@@ -9,6 +9,7 @@
 #include <QMimeDatabase>
 #include <QTemporaryFile>
 
+#include <Quotient/events/eventcontent.h>
 #include <Quotient/jobs/basejob.h>
 #include <Quotient/quotient_common.h>
 #include <qcoro/qcorosignal.h>
@@ -77,10 +78,14 @@ NeoChatRoom::NeoChatRoom(Connection *connection, QString roomId, JoinState joinS
             QString mxcUrl;
             if (auto event = eventCast<const Quotient::RoomMessageEvent>(m_event)) {
                 if (event->hasFileContent()) {
+#if Quotient_VERSION_MINOR > 8
+                    mxcUrl = event->fileContent()->url().toString();
+#else
                     mxcUrl = event->content()->fileInfo()->url().toString();
+#endif
                 }
             } else if (auto event = eventCast<const Quotient::StickerEvent>(m_event)) {
-                mxcUrl = event->image().fileInfo()->url().toString();
+                mxcUrl = event->image().url().toString();
             }
             if (mxcUrl.isEmpty()) {
                 return;
@@ -255,7 +260,11 @@ QCoro::Task<void> NeoChatRoom::doUploadFile(QUrl url, QString body)
     auto mime = QMimeDatabase().mimeTypeForUrl(url);
     url.setScheme("file"_ls);
     QFileInfo fileInfo(url.isLocalFile() ? url.toLocalFile() : url.toString());
+#if Quotient_VERSION_MINOR > 8
+    EventContent::Base *content;
+#else
     EventContent::TypedBase *content;
+#endif
     if (mime.name().startsWith("image/"_ls)) {
         QImage image(url.toLocalFile());
         content = new EventContent::ImageContent(url, fileInfo.size(), mime, image.size(), fileInfo.fileName());
@@ -270,7 +279,12 @@ QCoro::Task<void> NeoChatRoom::doUploadFile(QUrl url, QString body)
     } else {
         content = new EventContent::FileContent(url, fileInfo.size(), mime, fileInfo.fileName());
     }
+#if Quotient_VERSION_MINOR > 8
+    QString txnId =
+        postFile(body.isEmpty() ? url.fileName() : body, std::unique_ptr<EventContent::FileContent>(static_cast<EventContent::FileContent *>(content)));
+#else
     QString txnId = postFile(body.isEmpty() ? url.fileName() : body, content);
+#endif
     setHasFileUploading(true);
     connect(this, &Room::fileTransferCompleted, [this, txnId](const QString &id, FileSourceInfo) {
         if (id == txnId) {
@@ -1527,12 +1541,18 @@ FileTransferInfo NeoChatRoom::cachedFileTransferInfo(const Quotient::RoomEvent *
     int total = 0;
     if (auto evt = eventCast<const Quotient::RoomMessageEvent>(event)) {
         if (evt->hasFileContent()) {
-            mxcUrl = evt->content()->fileInfo()->url().toString();
-            total = evt->content()->fileInfo()->payloadSize;
+#if Quotient_VERSION_MINOR > 8
+            const auto fileContent = evt->fileContent();
+#else
+            const auto fileContent = evt->content()->fileInfo();
+#endif
+
+            mxcUrl = fileContent->url().toString();
+            total = fileContent->payloadSize;
         }
     } else if (auto evt = eventCast<const Quotient::StickerEvent>(event)) {
-        mxcUrl = evt->image().fileInfo()->url().toString();
-        total = evt->image().fileInfo()->payloadSize;
+        mxcUrl = evt->image().url().toString();
+        total = evt->image().payloadSize;
     }
 
     FileTransferInfo transferInfo = fileTransferInfo(event->id());
-- 
GitLab


From fe4caf4583c0cca1214e6cb836a7a22ffba57f52 Mon Sep 17 00:00:00 2001
From: James Graham <james.h.graham@protonmail.com>
Date: Wed, 23 Oct 2024 16:38:51 +0000
Subject: [PATCH 4/5] Updates for further event content changes

Adapt to https://github.com/quotient-im/libQuotient/pull/812
---
 src/actionshandler.cpp             |  6 +++++-
 src/eventhandler.cpp               | 34 +++++++++++++++++++-----------
 src/models/actionsmodel.cpp        |  1 +
 src/models/messagecontentmodel.cpp | 14 ++++++++----
 src/models/messageeventmodel.cpp   |  5 +++++
 src/neochatroom.cpp                | 28 ++++++++++++++++--------
 6 files changed, 62 insertions(+), 26 deletions(-)

diff --git a/src/actionshandler.cpp b/src/actionshandler.cpp
index 268c162a50..c47b780b12 100644
--- a/src/actionshandler.cpp
+++ b/src/actionshandler.cpp
@@ -91,11 +91,15 @@ void ActionsHandler::handleMessage(const QString &text, QString handledText, Cha
 
             for (auto it = m_room->messageEvents().crbegin(); it != m_room->messageEvents().crend(); it++) {
                 if (const auto event = eventCast<const RoomMessageEvent>(&**it)) {
+#if Quotient_VERSION_MINOR > 8
+                    if (event->senderId() == m_room->localMember().id() && event->has<EventContent::TextContent>()) {
+#else
                     if (event->senderId() == m_room->localMember().id() && event->hasTextContent()) {
+#endif
                         QString originalString;
                         if (event->content()) {
 #if Quotient_VERSION_MINOR > 8
-                            originalString = static_cast<const Quotient::EventContent::TextContent *>(event->content().get())->body;
+                            originalString = event->get<EventContent::TextContent>()->body;
 #else
                             originalString = static_cast<const Quotient::EventContent::TextContent *>(event->content())->body;
 #endif
diff --git a/src/eventhandler.cpp b/src/eventhandler.cpp
index de59823661..5843d43963 100644
--- a/src/eventhandler.cpp
+++ b/src/eventhandler.cpp
@@ -236,11 +236,15 @@ QString EventHandler::rawMessageBody(const Quotient::RoomMessageEvent &event)
 {
     QString body;
 
+#if Quotient_VERSION_MINOR > 8
+    if (event.has<EventContent::FileContent>()) {
+#else
     if (event.hasFileContent()) {
+#endif
         // if filename is given or body is equal to filename,
         // then body is a caption
 #if Quotient_VERSION_MINOR > 8
-        QString filename = event.fileContent()->originalName;
+        QString filename = event.get<EventContent::FileContent>()->originalName;
 #else
         QString filename = event.content()->fileInfo()->originalName;
 #endif
@@ -251,10 +255,11 @@ QString EventHandler::rawMessageBody(const Quotient::RoomMessageEvent &event)
         return body;
     }
 
-    if (event.hasTextContent() && event.content()) {
 #if Quotient_VERSION_MINOR > 8
-        body = event.richTextContent()->body;
+    if (event.has<EventContent::TextContent>() && event.content()) {
+        body = event.get<EventContent::TextContent>()->body;
 #else
+    if (event.hasTextContent() && event.content()) {
         body = static_cast<const EventContent::TextContent *>(event.content())->body;
 #endif
     } else {
@@ -471,10 +476,11 @@ QString EventHandler::getMessageBody(const RoomMessageEvent &event, Qt::TextForm
 {
     TextHandler textHandler;
 
-    if (event.hasFileContent()) {
 #if Quotient_VERSION_MINOR > 8
-        QString fileCaption = event.fileContent()->originalName;
+    if (event.has<EventContent::FileContent>()) {
+        QString fileCaption = event.get<EventContent::FileContent>()->originalName;
 #else
+    if (event.hasFileContent()) {
         QString fileCaption = event.content()->fileInfo()->originalName;
 #endif
         if (fileCaption.isEmpty()) {
@@ -487,10 +493,11 @@ QString EventHandler::getMessageBody(const RoomMessageEvent &event, Qt::TextForm
     }
 
     QString body;
-    if (event.hasTextContent() && event.content()) {
 #if Quotient_VERSION_MINOR > 8
-        body = event.richTextContent()->body;
+    if (event.has<EventContent::TextContent>() && event.content()) {
+        body = event.get<EventContent::TextContent>()->body;
 #else
+    if (event.hasTextContent() && event.content()) {
         body = static_cast<const EventContent::TextContent *>(event.content())->body;
 #endif
     } else {
@@ -673,13 +680,17 @@ QVariantMap EventHandler::getMediaInfoForEvent(const Quotient::RoomEvent *event)
     // Get the file info for the event.
     if (event->is<RoomMessageEvent>()) {
         auto roomMessageEvent = eventCast<const RoomMessageEvent>(event);
+#if Quotient_VERSION_MINOR > 8
+        if (!roomMessageEvent->has<EventContent::FileContentBase>()) {
+#else
         if (!roomMessageEvent->hasFileContent()) {
+#endif
             return {};
         }
 
 #if Quotient_VERSION_MINOR > 8
-        const auto content = roomMessageEvent->content();
-        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, static_cast<EventContent::FileContent *>(content.get()), eventId, false, false);
+        const auto content = roomMessageEvent->get<EventContent::FileContentBase>();
+        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, content.get(), eventId, false, false);
 #else
         const auto content = static_cast<const EventContent::FileContent *>(roomMessageEvent->content());
         QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, content, eventId, false, false);
@@ -687,8 +698,7 @@ QVariantMap EventHandler::getMediaInfoForEvent(const Quotient::RoomEvent *event)
         // if filename isn't specifically given, it is in body
         // https://spec.matrix.org/latest/client-server-api/#mfile
 #if Quotient_VERSION_MINOR > 8
-        mediaInfo["filename"_ls] =
-            (roomMessageEvent->fileContent()->originalName.isEmpty()) ? roomMessageEvent->plainBody() : roomMessageEvent->fileContent()->originalName;
+        mediaInfo["filename"_ls] = content->commonInfo().originalName.isEmpty() ? roomMessageEvent->plainBody() : content->commonInfo().originalName;
 #else
         mediaInfo["filename"_ls] = (content->fileInfo()->originalName.isEmpty()) ? roomMessageEvent->plainBody() : content->fileInfo()->originalName;
 #endif
@@ -746,7 +756,7 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
 
     // Add media size if available.
 #if Quotient_VERSION_MINOR > 8
-    mediaInfo["size"_ls] = static_cast<const EventContent::FileContent *>(fileContent)->payloadSize;
+    mediaInfo["size"_ls] = fileContent->commonInfo().payloadSize;
 #else
     mediaInfo["size"_ls] = static_cast<const EventContent::FileContent *>(fileContent)->fileInfo()->payloadSize;
 #endif
diff --git a/src/models/actionsmodel.cpp b/src/models/actionsmodel.cpp
index ba54e9d54d..a6ea117774 100644
--- a/src/models/actionsmodel.cpp
+++ b/src/models/actionsmodel.cpp
@@ -8,6 +8,7 @@
 #include "neochatconnection.h"
 #include "neochatroom.h"
 #include "roommanager.h"
+#include <Quotient/events/eventcontent.h>
 #include <Quotient/events/roommemberevent.h>
 #include <Quotient/events/roompowerlevelsevent.h>
 #include <Quotient/user.h>
diff --git a/src/models/messagecontentmodel.cpp b/src/models/messagecontentmodel.cpp
index 6c925964cd..ac1756f841 100644
--- a/src/models/messagecontentmodel.cpp
+++ b/src/models/messagecontentmodel.cpp
@@ -7,6 +7,7 @@
 
 #include <QImageReader>
 
+#include <Quotient/events/eventcontent.h>
 #include <Quotient/events/redactionevent.h>
 #include <Quotient/events/roommessageevent.h>
 #include <Quotient/events/stickerevent.h>
@@ -445,15 +446,16 @@ QList<MessageComponent> MessageContentModel::componentsForType(MessageComponentT
                 auto fileTransferInfo = m_room->cachedFileTransferInfo(m_event.get());
 
 #ifndef Q_OS_ANDROID
-                Q_ASSERT(event->content() != nullptr && event->hasFileContent());
 #if Quotient_VERSION_MINOR > 8
-                const QMimeType mimeType = event->fileContent()->mimeType;
+                Q_ASSERT(event->content() != nullptr && event->has<EventContent::FileContent>());
+                const QMimeType mimeType = event->get<EventContent::FileContent>()->mimeType;
 #else
+                Q_ASSERT(event->content() != nullptr && event->hasFileContent());
                 const QMimeType mimeType = event->content()->fileInfo()->mimeType;
 #endif
                 if (mimeType.name() == QStringLiteral("text/plain") || mimeType.parentMimeTypes().contains(QStringLiteral("text/plain"))) {
 #if Quotient_VERSION_MINOR > 8
-                    QString originalName = event->fileContent()->originalName;
+                    QString originalName = event->get<EventContent::FileContent>()->originalName;
 #else
                     QString originalName = event->content()->fileInfo()->originalName;
 #endif
@@ -579,8 +581,12 @@ void MessageContentModel::updateItineraryModel()
     }
 
     if (auto event = eventCast<const Quotient::RoomMessageEvent>(m_event)) {
+#if Quotient_VERSION_MINOR > 8
+        if (event->has<EventContent::FileContent>()) {
+#else
         if (event->hasFileContent()) {
-            auto filePath = m_room->cachedFileTransferInfo(m_event.get()).localPath;
+#endif
+            auto filePath = m_room->cachedFileTransferInfo(event).localPath;
             if (filePath.isEmpty() && m_itineraryModel != nullptr) {
                 delete m_itineraryModel;
                 m_itineraryModel = nullptr;
diff --git a/src/models/messageeventmodel.cpp b/src/models/messageeventmodel.cpp
index 09c738d0ef..784fcd36e4 100644
--- a/src/models/messageeventmodel.cpp
+++ b/src/models/messageeventmodel.cpp
@@ -8,6 +8,7 @@
 #include "neochatconfig.h"
 
 #include <Quotient/csapi/rooms.h>
+#include <Quotient/events/eventcontent.h>
 #include <Quotient/events/redactionevent.h>
 #include <Quotient/events/roommessageevent.h>
 #include <Quotient/events/stickerevent.h>
@@ -498,7 +499,11 @@ QVariant MessageEventModel::data(const QModelIndex &idx, int role) const
 
     if (role == ProgressInfoRole) {
         if (auto e = eventCast<const RoomMessageEvent>(&evt)) {
+#if Quotient_VERSION_MINOR > 8
+            if (e->has<EventContent::FileContent>()) {
+#else
             if (e->hasFileContent()) {
+#endif
                 return QVariant::fromValue(m_currentRoom->cachedFileTransferInfo(&evt));
             }
         }
diff --git a/src/neochatroom.cpp b/src/neochatroom.cpp
index 79bcdfee67..8f4201e580 100644
--- a/src/neochatroom.cpp
+++ b/src/neochatroom.cpp
@@ -77,10 +77,11 @@ NeoChatRoom::NeoChatRoom(Connection *connection, QString roomId, JoinState joinS
             const auto m_event = evtIt->viewAs<RoomEvent>();
             QString mxcUrl;
             if (auto event = eventCast<const Quotient::RoomMessageEvent>(m_event)) {
-                if (event->hasFileContent()) {
 #if Quotient_VERSION_MINOR > 8
-                    mxcUrl = event->fileContent()->url().toString();
+                if (event->has<EventContent::FileContentBase>()) {
+                    mxcUrl = event->get<EventContent::FileContentBase>()->url().toString();
 #else
+                if (event->hasFileContent()) {
                     mxcUrl = event->content()->fileInfo()->url().toString();
 #endif
                 }
@@ -261,7 +262,7 @@ QCoro::Task<void> NeoChatRoom::doUploadFile(QUrl url, QString body)
     url.setScheme("file"_ls);
     QFileInfo fileInfo(url.isLocalFile() ? url.toLocalFile() : url.toString());
 #if Quotient_VERSION_MINOR > 8
-    EventContent::Base *content;
+    EventContent::FileContentBase *content;
 #else
     EventContent::TypedBase *content;
 #endif
@@ -280,8 +281,7 @@ QCoro::Task<void> NeoChatRoom::doUploadFile(QUrl url, QString body)
         content = new EventContent::FileContent(url, fileInfo.size(), mime, fileInfo.fileName());
     }
 #if Quotient_VERSION_MINOR > 8
-    QString txnId =
-        postFile(body.isEmpty() ? url.fileName() : body, std::unique_ptr<EventContent::FileContent>(static_cast<EventContent::FileContent *>(content)));
+    QString txnId = postFile(body.isEmpty() ? url.fileName() : body, std::unique_ptr<EventContent::FileContentBase>(content));
 #else
     QString txnId = postFile(body.isEmpty() ? url.fileName() : body, content);
 #endif
@@ -410,10 +410,11 @@ bool NeoChatRoom::lastEventIsSpoiler() const
 {
     if (auto event = lastEvent()) {
         if (auto e = eventCast<const RoomMessageEvent>(event)) {
-            if (e->hasTextContent() && e->content() && e->mimeType().name() == "text/html"_ls) {
 #if Quotient_VERSION_MINOR > 8
-                auto htmlBody = static_cast<const Quotient::EventContent::TextContent *>(e->content().get())->body;
+            if (e->has<EventContent::TextContent>() && e->content() && e->mimeType().name() == "text/html"_ls) {
+                auto htmlBody = e->get<EventContent::TextContent>()->body;
 #else
+            if (e->hasTextContent() && e->content() && e->mimeType().name() == "text/html"_ls) {
                 auto htmlBody = static_cast<const Quotient::EventContent::TextContent *>(e->content())->body;
 #endif
                 return htmlBody.contains("data-mx-spoiler"_ls);
@@ -1474,7 +1475,11 @@ void NeoChatRoom::openEventMediaExternally(const QString &eventId)
     const auto evtIt = findInTimeline(eventId);
     if (evtIt != messageEvents().rend() && is<RoomMessageEvent>(**evtIt)) {
         const auto event = evtIt->viewAs<RoomMessageEvent>();
+#if Quotient_VERSION_MINOR > 8
+        if (event->has<EventContent::FileContent>()) {
+#else
         if (event->hasFileContent()) {
+#endif
             const auto transferInfo = cachedFileTransferInfo(event);
             if (transferInfo.completed()) {
                 UrlHelper helper;
@@ -1507,7 +1512,11 @@ void NeoChatRoom::copyEventMedia(const QString &eventId)
     const auto evtIt = findInTimeline(eventId);
     if (evtIt != messageEvents().rend() && is<RoomMessageEvent>(**evtIt)) {
         const auto event = evtIt->viewAs<RoomMessageEvent>();
+#if Quotient_VERSION_MINOR > 8
+        if (event->has<EventContent::FileContent>()) {
+#else
         if (event->hasFileContent()) {
+#endif
             const auto transferInfo = fileTransferInfo(eventId);
             if (transferInfo.completed()) {
                 Clipboard clipboard;
@@ -1540,10 +1549,11 @@ FileTransferInfo NeoChatRoom::cachedFileTransferInfo(const Quotient::RoomEvent *
     QString mxcUrl;
     int total = 0;
     if (auto evt = eventCast<const Quotient::RoomMessageEvent>(event)) {
-        if (evt->hasFileContent()) {
 #if Quotient_VERSION_MINOR > 8
-            const auto fileContent = evt->fileContent();
+        if (evt->has<EventContent::FileContent>()) {
+            const auto fileContent = evt->get<EventContent::FileContent>();
 #else
+        if (evt->hasFileContent()) {
             const auto fileContent = evt->content()->fileInfo();
 #endif
 
-- 
GitLab


From 51b0275b6466d58af789121b72d3600a7197baef Mon Sep 17 00:00:00 2001
From: James Graham <james.h.graham@protonmail.com>
Date: Fri, 25 Oct 2024 17:32:19 +0100
Subject: [PATCH 5/5] Adjustments for 24.08

---
 src/eventhandler.cpp        | 34 +++++++++++++++++-----------------
 src/eventhandler.h          | 16 ++++++++--------
 src/models/actionsmodel.cpp |  1 -
 3 files changed, 25 insertions(+), 26 deletions(-)

diff --git a/src/eventhandler.cpp b/src/eventhandler.cpp
index 5843d43963..6b02ade673 100644
--- a/src/eventhandler.cpp
+++ b/src/eventhandler.cpp
@@ -481,7 +481,7 @@ QString EventHandler::getMessageBody(const RoomMessageEvent &event, Qt::TextForm
         QString fileCaption = event.get<EventContent::FileContent>()->originalName;
 #else
     if (event.hasFileContent()) {
-        QString fileCaption = event.content()->fileInfo()->originalName;
+        auto fileCaption = event.content()->fileInfo()->originalName;
 #endif
         if (fileCaption.isEmpty()) {
             fileCaption = event.plainBody();
@@ -690,10 +690,10 @@ QVariantMap EventHandler::getMediaInfoForEvent(const Quotient::RoomEvent *event)
 
 #if Quotient_VERSION_MINOR > 8
         const auto content = roomMessageEvent->get<EventContent::FileContentBase>();
-        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, content.get(), eventId, false, false);
+        QVariantMap mediaInfo = getMediaInfoFromFileInfo(content.get(), eventId, false, false);
 #else
         const auto content = static_cast<const EventContent::FileContent *>(roomMessageEvent->content());
-        QVariantMap mediaInfo = getMediaInfoFromFileInfo(room, content, eventId, false, false);
+        QVariantMap mediaInfo = getMediaInfoFromFileInfo(content, eventId, false, false);
 #endif
         // if filename isn't specifically given, it is in body
         // https://spec.matrix.org/latest/client-server-api/#mfile
@@ -708,21 +708,21 @@ QVariantMap EventHandler::getMediaInfoForEvent(const Quotient::RoomEvent *event)
         auto stickerEvent = eventCast<const StickerEvent>(event);
         auto content = &stickerEvent->image();
 
-        return getMediaInfoFromFileInfo(room, content, eventId, false, true);
+        return getMediaInfoFromFileInfo(content, eventId, false, true);
     } else {
         return {};
     }
 }
 
-QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
+QVariantMap EventHandler::getMediaInfoFromFileInfo(
 #if Quotient_VERSION_MINOR > 8
-                                                   const Quotient::EventContent::FileContentBase *fileContent,
+    const Quotient::EventContent::FileContentBase *fileContent,
 #else
-                                                   const Quotient::EventContent::TypedBase *fileContent,
+    const Quotient::EventContent::TypedBase *fileContent,
 #endif
-                                                   const QString &eventId,
-                                                   bool isThumbnail,
-                                                   bool isSticker)
+    const QString &eventId,
+    bool isThumbnail,
+    bool isSticker) const
 {
     QVariantMap mediaInfo;
 
@@ -735,9 +735,9 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
         mediaInfo["source"_ls] = QUrl();
     } else {
 #if Quotient_VERSION_MINOR > 8
-        QUrl source = room->makeMediaUrl(eventId, fileContent->url());
+        QUrl source = m_room->makeMediaUrl(eventId, fileContent->url());
 #else
-        QUrl source = room->makeMediaUrl(eventId, fileContent->fileInfo()->url());
+        QUrl source = m_room->makeMediaUrl(eventId, fileContent->fileInfo()->url());
 #endif
 
         if (source.isValid()) {
@@ -779,7 +779,7 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
             mediaInfo["animated"_ls] = QMovie::supportedFormats().contains(mimeType.preferredSuffix().toUtf8());
 
             QVariantMap tempInfo;
-            auto thumbnailInfo = getMediaInfoFromTumbnail(room, castInfo->thumbnail, eventId);
+            auto thumbnailInfo = getMediaInfoFromTumbnail(castInfo->thumbnail, eventId);
             if (thumbnailInfo["source"_ls].toUrl().scheme() == "mxc"_ls) {
                 tempInfo = thumbnailInfo;
             } else {
@@ -801,7 +801,7 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
 
             if (!isThumbnail) {
                 QVariantMap tempInfo;
-                auto thumbnailInfo = getMediaInfoFromTumbnail(room, castInfo->thumbnail, eventId);
+                auto thumbnailInfo = getMediaInfoFromTumbnail(castInfo->thumbnail, eventId);
                 if (thumbnailInfo["source"_ls].toUrl().scheme() == "mxc"_ls) {
                     tempInfo = thumbnailInfo;
                 } else {
@@ -825,14 +825,14 @@ QVariantMap EventHandler::getMediaInfoFromFileInfo(const NeoChatRoom *room,
     return mediaInfo;
 }
 
-QVariantMap EventHandler::getMediaInfoFromTumbnail(const NeoChatRoom *room, const Quotient::EventContent::Thumbnail &thumbnail, const QString &eventId)
+QVariantMap EventHandler::getMediaInfoFromTumbnail(const Quotient::EventContent::Thumbnail &thumbnail, const QString &eventId) const
 {
     QVariantMap thumbnailInfo;
 
     if (!thumbnail.url().isValid() || thumbnail.url().scheme() != QStringLiteral("mxc") || eventId.isEmpty()) {
         thumbnailInfo["source"_ls] = QUrl();
     } else {
-        QUrl source = room->makeMediaUrl(eventId, thumbnail.url());
+        QUrl source = m_room->makeMediaUrl(eventId, thumbnail.url());
 
         if (source.isValid()) {
             thumbnailInfo["source"_ls] = source;
@@ -857,7 +857,7 @@ QVariantMap EventHandler::getMediaInfoFromTumbnail(const NeoChatRoom *room, cons
     return thumbnailInfo;
 }
 
-bool EventHandler::hasReply(const Quotient::RoomEvent *event, bool showFallbacks)
+bool EventHandler::hasReply() const
 {
     if (m_event == nullptr) {
         qCWarning(EventHandling) << "hasReply called with m_event set to nullptr.";
diff --git a/src/eventhandler.h b/src/eventhandler.h
index 866ea56e01..6a35208824 100644
--- a/src/eventhandler.h
+++ b/src/eventhandler.h
@@ -338,15 +338,15 @@ private:
     QString getBody(const Quotient::RoomEvent *event, Qt::TextFormat format, bool stripNewlines) const;
     QString getMessageBody(const Quotient::RoomMessageEvent &event, Qt::TextFormat format, bool stripNewlines) const;
 
-    static QVariantMap getMediaInfoForEvent(const NeoChatRoom *room, const Quotient::RoomEvent *event);
-    QVariantMap static getMediaInfoFromFileInfo(const NeoChatRoom *room,
+    QVariantMap getMediaInfoForEvent(const Quotient::RoomEvent *event) const;
+    QVariantMap getMediaInfoFromFileInfo(
 #if Quotient_VERSION_MINOR > 8
-                                                const Quotient::EventContent::FileContentBase *fileContent,
+        const Quotient::EventContent::FileContentBase *fileContent,
 #else
-                                                const Quotient::EventContent::TypedBase *fileContent,
+        const Quotient::EventContent::TypedBase *fileContent,
 #endif
-                                                const QString &eventId,
-                                                bool isThumbnail = false,
-                                                bool isSticker = false);
-    static QVariantMap getMediaInfoFromTumbnail(const NeoChatRoom *room, const Quotient::EventContent::Thumbnail &thumbnail, const QString &eventId);
+        const QString &eventId,
+        bool isThumbnail = false,
+        bool isSticker = false) const;
+    QVariantMap getMediaInfoFromTumbnail(const Quotient::EventContent::Thumbnail &thumbnail, const QString &eventId) const;
 };
diff --git a/src/models/actionsmodel.cpp b/src/models/actionsmodel.cpp
index a6ea117774..ba54e9d54d 100644
--- a/src/models/actionsmodel.cpp
+++ b/src/models/actionsmodel.cpp
@@ -8,7 +8,6 @@
 #include "neochatconnection.h"
 #include "neochatroom.h"
 #include "roommanager.h"
-#include <Quotient/events/eventcontent.h>
 #include <Quotient/events/roommemberevent.h>
 #include <Quotient/events/roompowerlevelsevent.h>
 #include <Quotient/user.h>
-- 
GitLab

