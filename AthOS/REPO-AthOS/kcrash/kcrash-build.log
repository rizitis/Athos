Starting build process...
Detected architecture: x86_64
Required dependencies: doxygen	extra-cmake-modules	kcoreaddons	kwindowsystem
doxygen is already installed!
extra-cmake-modules is already installed!
kcoreaddons is already installed!
kwindowsystem is already installed!
No optional dependencies found.
Downloading source code tar.xz file
--2025-05-10 21:32:00--  https://download.kde.org/stable/frameworks/6.14/kcrash-6.14.0.tar.xz
Resolving download.kde.org (download.kde.org)... 49.12.122.15, 2a01:4f8:242:53eb::4
Connecting to download.kde.org (download.kde.org)|49.12.122.15|:443... connected.
HTTP request sent, awaiting response... 302 Found
Location: https://ftp.cc.uoc.gr/mirrors/kde/stable/frameworks/6.14/kcrash-6.14.0.tar.xz [following]
--2025-05-10 21:32:00--  https://ftp.cc.uoc.gr/mirrors/kde/stable/frameworks/6.14/kcrash-6.14.0.tar.xz
Resolving ftp.cc.uoc.gr (ftp.cc.uoc.gr)... 147.52.159.50, 2001:648:2c00:6c08::2
Connecting to ftp.cc.uoc.gr (ftp.cc.uoc.gr)|147.52.159.50|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 28884 (28K) [application/octet-stream]
Saving to: ‘kcrash-6.14.0.tar.xz’

     0K .......... .......... ........                        100%  521M=0s

2025-05-10 21:32:00 (521 MB/s) - ‘kcrash-6.14.0.tar.xz’ saved [28884/28884]

Found file: kcrash-6.14.0.tar.xz
No checksum provided. Skipping checksum verification and proceeding...
Creating working directories and exporting source code in...
kcrash-6.14.0/
kcrash-6.14.0/.git-blame-ignore-revs
kcrash-6.14.0/.gitignore
kcrash-6.14.0/.gitlab-ci.yml
kcrash-6.14.0/.kde-ci.yml
kcrash-6.14.0/CMakeLists.txt
kcrash-6.14.0/KF6CrashConfig.cmake.in
kcrash-6.14.0/LICENSES/
kcrash-6.14.0/LICENSES/CC0-1.0.txt
kcrash-6.14.0/LICENSES/LGPL-2.0-or-later.txt
kcrash-6.14.0/README.md
kcrash-6.14.0/autotests/
kcrash-6.14.0/autotests/CMakeLists.txt
kcrash-6.14.0/autotests/core_patterns/
kcrash-6.14.0/autotests/core_patterns/exec
kcrash-6.14.0/autotests/core_patterns/exec-apport
kcrash-6.14.0/autotests/core_patterns/exec-apport.license
kcrash-6.14.0/autotests/core_patterns/exec.license
kcrash-6.14.0/autotests/core_patterns/no-exec
kcrash-6.14.0/autotests/core_patterns/no-exec.license
kcrash-6.14.0/autotests/coreconfigtest.cpp
kcrash-6.14.0/autotests/kcrashtest.cpp
kcrash-6.14.0/autotests/metadatatest.cpp
kcrash-6.14.0/autotests/test_crasher.cpp
kcrash-6.14.0/metainfo.yaml
kcrash-6.14.0/src/
kcrash-6.14.0/src/CMakeLists.txt
kcrash-6.14.0/src/config-kcrash.h.cmake
kcrash-6.14.0/src/coreconfig.cpp
kcrash-6.14.0/src/coreconfig_p.h
kcrash-6.14.0/src/exception.cpp
kcrash-6.14.0/src/exception_p.h
kcrash-6.14.0/src/kcrash.cpp
kcrash-6.14.0/src/kcrash.h
kcrash-6.14.0/src/metadata.cpp
kcrash-6.14.0/src/metadata_p.h
/home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/work
README or README.md already exists, skipping creation.
hm...lets continue and see what happens
-- The C compiler identification is GNU 14.2.0
-- The CXX compiler identification is GNU 14.2.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- 

-- Installing in the same prefix as Qt, adopting their path scheme.
-- Performing Test HAVE_STDATOMIC
-- Performing Test HAVE_STDATOMIC - Success
-- Found WrapAtomic: TRUE
-- Looking for __GLIBC__
-- Looking for __GLIBC__ - found
-- Performing Test _OFFT_IS_64BIT
-- Performing Test _OFFT_IS_64BIT - Success
-- Performing Test HAVE_DATE_TIME
-- Performing Test HAVE_DATE_TIME - Success
-- Performing Test BSYMBOLICFUNCTIONS_AVAILABLE
-- Performing Test BSYMBOLICFUNCTIONS_AVAILABLE - Success
-- Found OpenGL: /usr/lib64/libOpenGL.so
-- Found WrapOpenGL: TRUE
-- Found XKB: /usr/lib64/libxkbcommon.so (found suitable version "1.9.2", minimum required is "0.5.0")
-- Found WrapVulkanHeaders: /usr/include
-- Found X11: /usr/include
-- Looking for XOpenDisplay in /usr/lib64/libX11.so;/usr/lib64/libXext.so
-- Looking for XOpenDisplay in /usr/lib64/libX11.so;/usr/lib64/libXext.so - found
-- Looking for gethostbyname
-- Looking for gethostbyname - found
-- Looking for connect
-- Looking for connect - found
-- Looking for remove
-- Looking for remove - found
-- Looking for shmat
-- Looking for shmat - found
-- Looking for IceConnectionNumber in ICE
-- Looking for IceConnectionNumber in ICE - found
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Found Doxygen: /usr/bin/doxygen (found suitable version "1.13.2", minimum required is "1.8.13") found components: doxygen dot
-- No such target Qt6Core_QCH defined when calling ecm_add_qch(), ignored.


Configuration file '/home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/work/kcrash-6.14.0/build/src/KF6Crash_ECMQchDoxygen.config' updated.

-- The following features have been enabled:

 * QCH, API documentation in QCH format (for e.g. Qt Assistant, Qt Creator & KDevelop)
 * Core Pattern Raising, Raising signals to kernel core patterns (iff the pattern is a process). You may wish to not install drkonqi if this can cause a UI conflict.

-- The following OPTIONAL packages have been found:

 * OpenGL
 * XKB (required version >= 0.5.0), XKB API common to servers and clients., <http://xkbcommon.org>
 * WrapVulkanHeaders
 * Qt6DBusTools (required version >= 6.8.3)
 * Qt6Gui (required version >= 6.7.0)

-- The following REQUIRED packages have been found:

 * ECM (required version >= 6.14.0), Extra CMake Modules., <https://commits.kde.org/extra-cmake-modules>
 * X11
 * Qt6Test (required version >= 6.7.0)
 * KF6CoreAddons (required version >= 6.14.0)
 * Doxygen (required version >= 1.8.13)
   Needed for API dox QCH file generation
 * Qt6ToolsTools, qhelpgenerator from Qt6 tools
   Needed for API dox QCH file generation
 * Qt6
 * Qt6Core

-- Configuring done (1.9s)
-- Generating done (0.0s)
-- Build files have been written to: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/work/kcrash-6.14.0/build
[1/26] Automatic MOC for target KF6Crash
[2/26] Building CXX object src/CMakeFiles/KF6Crash.dir/KF6Crash_autogen/mocs_compilation.cpp.o
[3/26] Generating src/KF6Crash.qch, src/KF6Crash.tags
Building up file structure...
Insert custom filters...
Insert help data for filter section (1 of 1)...
Insert files...
Insert contents...
Insert indices...
Documentation successfully generated.
[4/26] Automatic MOC for target coreconfigtest
[5/26] Building CXX object autotests/CMakeFiles/coreconfigtest.dir/coreconfigtest_autogen/mocs_compilation.cpp.o
[6/26] Automatic MOC for target metadatatest
[7/26] Building CXX object autotests/CMakeFiles/metadatatest.dir/metadatatest_autogen/mocs_compilation.cpp.o
[8/26] Building CXX object src/CMakeFiles/KF6Crash.dir/metadata.cpp.o
[9/26] Building CXX object src/CMakeFiles/KF6Crash.dir/exception.cpp.o
[10/26] Building CXX object src/CMakeFiles/KF6Crash.dir/kcrash_debug.cpp.o
[11/26] Building CXX object src/CMakeFiles/KF6Crash.dir/coreconfig.cpp.o
[12/26] Building CXX object autotests/CMakeFiles/coreconfigtest.dir/coreconfigtest.cpp.o
[13/26] Linking CXX executable bin/coreconfigtest
[14/26] Building CXX object autotests/CMakeFiles/metadatatest.dir/metadatatest.cpp.o
[15/26] Linking CXX executable bin/metadatatest
[16/26] Building CXX object src/CMakeFiles/KF6Crash.dir/kcrash.cpp.o
[17/26] Linking CXX shared library bin/libKF6Crash.so.6.14.0
[18/26] Creating library symlink bin/libKF6Crash.so.6 bin/libKF6Crash.so
[19/26] Automatic MOC for target test_crasher
[20/26] Building CXX object autotests/CMakeFiles/test_crasher.dir/test_crasher_autogen/mocs_compilation.cpp.o
[21/26] Building CXX object autotests/CMakeFiles/test_crasher.dir/test_crasher.cpp.o
/home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/work/kcrash-6.14.0/autotests/test_crasher.cpp: In function ‘int main(int, char**)’:
/home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/work/kcrash-6.14.0/autotests/test_crasher.cpp:62:24: warning: ‘void operator delete(void*, std::size_t)’ called on a pointer to an unallocated object ‘57005’ [-Wfree-nonheap-object]
   62 |         delete (char *)0xdead;
      |                        ^~~~~~
[22/26] Linking CXX executable bin/test_crasher
[23/26] Automatic MOC for target kcrashtest
[24/26] Building CXX object autotests/CMakeFiles/kcrashtest.dir/kcrashtest_autogen/mocs_compilation.cpp.o
[25/26] Building CXX object autotests/CMakeFiles/kcrashtest.dir/kcrashtest.cpp.o
[26/26] Linking CXX executable bin/kcrashtest
-- Install configuration: "RelWithDebInfo"
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/libKF6Crash.so.6.14.0
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/libKF6Crash.so.6
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/libKF6Crash.so
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/include/KF6/KCrash/kcrash_export.h
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/include/KF6/KCrash/KCrash
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/include/KF6/KCrash/kcrash.h
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/share/qlogging-categories6/kcrash.categories
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/share/qlogging-categories6/kcrash.renamecategories
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/doc/qt6-6.8.3_20250319_bab1fecd/KF6Crash.qch
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/doc/qt6-6.8.3_20250319_bab1fecd/KF6Crash.tags
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/cmake/KF6Crash/KF6CrashQchTargets.cmake
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/cmake/KF6Crash/KF6CrashConfig.cmake
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/cmake/KF6Crash/KF6CrashConfigVersion.cmake
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/cmake/KF6Crash/KF6CrashTargets.cmake
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/lib64/cmake/KF6Crash/KF6CrashTargets-relwithdebinfo.cmake
-- Installing: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/package-kcrash/usr/include/KF6/KCrash/kcrash_version.h
The main part of source code is ready. We are moving on to preparing post install scripts, docs, license, man pages etc..
cp: cannot stat 'AUTHORS': No such file or directory
cp: cannot stat 'ChangeLog*': No such file or directory
cp: cannot stat 'COPYING': No such file or directory
cp: cannot stat 'CREDITS': No such file or directory
cp: cannot stat 'LICENSE': No such file or directory
cp: cannot stat 'MAINTAINERS': No such file or directory
cp: cannot stat 'NEWS': No such file or directory
cp: cannot stat 'docs': No such file or directory
cp: cannot stat 'DOCS': No such file or directory
grep: /home/omen/GITHUB/PLASMA_WORLD/AthOS/REPO-AthOS/kcrash/kcrash.info: No such file or directory
doxygen
extra-cmake-modules
kcoreaddons
kwindowsystem
Packaging compiled for slackware installation...
MAKEPKG_FLAGS is empty or unset, using default

Slackware package maker, version 3.14159265.

Searching for symbolic links:
usr/lib64/libKF6Crash.so	libKF6Crash.so.6
usr/lib64/libKF6Crash.so.6	libKF6Crash.so.6.14.0

Making symbolic link creation script:
( cd usr/lib64 ; rm -rf libKF6Crash.so )
( cd usr/lib64 ; ln -sf libKF6Crash.so.6 libKF6Crash.so )
( cd usr/lib64 ; rm -rf libKF6Crash.so.6 )
( cd usr/lib64 ; ln -sf libKF6Crash.so.6.14.0 libKF6Crash.so.6 )

Unless your existing installation script already contains the code
to create these links, you should append these lines to your existing
install script. Now's your chance. :^)

Would you like to add this stuff to the existing install script and
remove the symbolic links ([y]es, [n]o)? y


Removing symbolic links:
removed './usr/lib64/libKF6Crash.so.6'
removed './usr/lib64/libKF6Crash.so'

Updating your ./install/doinst.sh...

This next step is optional - you can set the directories in your package
to some sane permissions. If any of the directories in your package have
special permissions, then DO NOT reset them here!

Would you like to reset all directory permissions to 755 (drwxr-xr-x) and
directory ownerships to root:root ([y]es, [n]o)? n


Creating Slackware package:  /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz

./
install/
install/doinst.sh
install/slack-desc
usr/
usr/doc/
usr/doc/kcrash-6.14.0/
usr/doc/kcrash-6.14.0/README.md
usr/doc/kcrash-6.14.0/kcrash.ini
usr/doc/kcrash-6.14.0/slack-required
usr/doc/qt6-6.8.3_20250319_bab1fecd/
usr/doc/qt6-6.8.3_20250319_bab1fecd/KF6Crash.qch
usr/doc/qt6-6.8.3_20250319_bab1fecd/KF6Crash.tags
usr/include/
usr/include/KF6/
usr/include/KF6/KCrash/
usr/include/KF6/KCrash/KCrash
usr/include/KF6/KCrash/kcrash.h
usr/include/KF6/KCrash/kcrash_export.h
usr/include/KF6/KCrash/kcrash_version.h
usr/lib64/
usr/lib64/cmake/
usr/lib64/cmake/KF6Crash/
usr/lib64/cmake/KF6Crash/KF6CrashConfig.cmake
usr/lib64/cmake/KF6Crash/KF6CrashConfigVersion.cmake
usr/lib64/cmake/KF6Crash/KF6CrashQchTargets.cmake
usr/lib64/cmake/KF6Crash/KF6CrashTargets-relwithdebinfo.cmake
usr/lib64/cmake/KF6Crash/KF6CrashTargets.cmake
usr/lib64/libKF6Crash.so.6.14.0
usr/share/
usr/share/qlogging-categories6/
usr/share/qlogging-categories6/kcrash.categories
usr/share/qlogging-categories6/kcrash.renamecategories

Slackware package /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz created.

Create shared object file for kcrash-6.14.0-x86_64-1_rtz.tlz
Creating /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz.so.file using /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz
Successfully created /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz.so.file
Packaging of executable and meta-data in kcrash.tar.lz4 format.
/tmp/kcrash /tmp/kcrash
/tmp/kcrash
BIN_NAME
README
kcrash-6.14.0-x86_64-1_rtz.tlz
kcrash-6.14.0-x86_64-1_rtz.tlz.md5
kcrash-6.14.0-x86_64-1_rtz.tlz.so.file
kcrash-6.14.0-x86_64-1_rtz.tlz.txt
kcrash.dep
makepkg-kcrash.log
kcrash build finished. Procced to installation...

+===============================================================================================+
| Upgrading kcrash-6.14.0-x86_64-1_rtz package using /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz |
+===============================================================================================+

Pre-installing package kcrash-6.14.0-x86_64-1_rtz...
Removing package: kcrash-6.14.0-x86_64-1_rtz-upgraded-2025-05-10,21:32:13
Installing package kcrash-6.14.0-x86_64-1_rtz.tlz:
PACKAGE DESCRIPTION:
# kcrash (crash analysis)
#
# Support for application crash analysis and bug report from apps
#
# https://community.kde.org/Frameworks
Executing install script for kcrash-6.14.0-x86_64-1_rtz.tlz.
Font directories:
	/usr/share/fonts
/usr/share/fonts: caching, new cache contents: 0 fonts, 11 dirs
/usr/share/fonts/100dpi: caching, new cache contents: 238 fonts, 0 dirs
/usr/share/fonts/75dpi: caching, new cache contents: 238 fonts, 0 dirs
/usr/share/fonts/OTF: caching, new cache contents: 124 fonts, 0 dirs
/usr/share/fonts/Speedo: caching, new cache contents: 0 fonts, 0 dirs
/usr/share/fonts/TTF: caching, new cache contents: 1132 fonts, 0 dirs
/usr/share/fonts/Type1: caching, new cache contents: 64 fonts, 0 dirs
/usr/share/fonts/cyrillic: caching, new cache contents: 0 fonts, 0 dirs
/usr/share/fonts/encodings: caching, new cache contents: 0 fonts, 1 dirs
/usr/share/fonts/encodings/large: caching, new cache contents: 0 fonts, 0 dirs
/usr/share/fonts/kanjistrokeorders: caching, new cache contents: 1 fonts, 0 dirs
/usr/share/fonts/misc: caching, new cache contents: 143 fonts, 0 dirs
/usr/share/fonts/util: caching, new cache contents: 0 fonts, 0 dirs
/var/cache/fontconfig: cleaning cache directory
/root/.cache/fontconfig: not cleaning non-existent cache directory
/root/.fontconfig: not cleaning non-existent cache directory
/usr/bin/fc-cache: succeeded
Package kcrash-6.14.0-x86_64-1_rtz.tlz installed.
Package kcrash-6.14.0-x86_64-1_rtz upgraded with new package /tmp/kcrash/kcrash-6.14.0-x86_64-1_rtz.tlz.
Cleaning environmet: Removing source code, and work-space...
rm: cannot remove 'kcrash-6.14.0.tar.xz': No such file or directory
Build process completed in 0 minutes and 19 seconds.
