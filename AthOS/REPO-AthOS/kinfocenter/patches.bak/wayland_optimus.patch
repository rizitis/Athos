--- main.cpp.orig	2025-02-18 15:28:42.000000000 +0200
+++ main.cpp	2025-02-24 22:42:16.997515109 +0200
@@ -100,28 +100,30 @@
     Q_DISABLE_COPY_MOVE(KCMAboutSystem) // rule of 5
 public:
     explicit KCMAboutSystem(QObject *parent, const KPluginMetaData &data, const QVariantList &args)
-        : KQuickConfigModule(parent, data)
-        , m_dumpToStdout(args.contains(QStringLiteral("dump")))
-    {
-        if (m_dumpToStdout) {
-            const auto windows = qGuiApp->allWindows();
-            for (const auto &window : windows) {
-                // Don't steal focus when running in wayland or xcb platform mode. Bit of a hack but the best we can do
-                // since we can't move the window off-screen on wayland.
-                window->setVisibility(QWindow::Minimized);
-            }
-            QLoggingCategory::setFilterRules(QStringLiteral("*=false"));
+    : KQuickConfigModule(parent, data)
+    , m_dumpToStdout(args.contains(QStringLiteral("dump")))
+{
+    // Check if the Nvidia driver is installed
+    if (!QFileInfo::exists("/proc/driver/nvidia/version")) {
+        // If not found, enforce software rendering
+        qputenv("QT_QUICK_BACKEND", "software");
+    }
+
+    if (m_dumpToStdout) {
+        const auto windows = qGuiApp->allWindows();
+        for (const auto &window : windows) {
+            // Don't steal focus when running in Wayland or X11
+            window->setVisibility(QWindow::Minimized);
         }
+        QLoggingCategory::setFilterRules(QStringLiteral("*=false"));
+    }
 
-        qmlRegisterType<ServiceRunner>("org.kde.kinfocenter.about_distro.private", 1, 0, "ServiceRunner");
-        qmlRegisterUncreatableType<Hint>("org.kde.kinfocenter.about_distro.private", 1, 0, "Hint", "Only for enums");
+    qmlRegisterType<ServiceRunner>("org.kde.kinfocenter.about_distro.private", 1, 0, "ServiceRunner");
+    qmlRegisterUncreatableType<Hint>("org.kde.kinfocenter.about_distro.private", 1, 0, "Hint", "Only for enums");
+
+    load();
+}
 
-        // https://bugs.kde.org/show_bug.cgi?id=366158
-        // When a KCM loads fast enough do a blocking load via the constructor.
-        // Otherwise there is a noticeable rendering gap where dummy/no data is
-        // shown. Makes it look bad.
-        load();
-    }
 
     ~KCMAboutSystem() override
     {
