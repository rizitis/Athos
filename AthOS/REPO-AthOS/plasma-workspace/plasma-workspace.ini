Packager="Anagnostakis Ioannis <rizitis@gmail.com> GR"

Homepage="https://kde.org/plasma-desktop/"
        #|--------------------------------------|#
SortDesc="KDE Plasma Workspace"
LongDesc="KDE Plasma Workspace"
VERSION=6.3.5
PRGNAM=plasma-workspace
SRCNAM=plasma-workspace
# Source download link
SRCURL=https://download.kde.org/stable/plasma/6.3.5/plasma-workspace-6.3.5.tar.xz
COMPRESS=tar.xz

REQUIRED="extra-cmake-modules	kded	kdoctools	baloo	breeze	iso-codes	karchive	kauth	kcmutils	kcoreaddons	kcrash	kdbusaddons	kdeclarative	kded	kglobalaccel	kglobalacceld	kguiaddons	kholidays	ki18n	kiconthemes	kidletime	kio	kitemmodels	knewstuff	knotifications	knotifyconfig	kpackage	kparts	kpipewire	kquickcharts	krunner	kscreenlocker	kstatusnotifieritem	ksvg	ktexteditor	ktextwidgets	kunitconversion	kuserfeedback	kwayland	kwin	layer-shell-qt	libcanberra	libkexiv2	libkscreen	libksysguard	libplasma	libqalculate	networkmanager-qt	plasma-activities-stats	plasma-wayland-protocols	plasma5support	prison	wayland-protocols	plasma-workspace-wallpapers1 plasma-workspace-wallpapers2"
OPTDEPS=

BUILD=${BUILD:-1}
TAG=${TAG:-_rtz}
set +x

# This must be always here even if not patches needed.
patch_build() {
if [ -e $CWD/patches/ ]; then
  for PATCH in $CWD/patches/*.patch; do
    patch -p1 -i $PATCH
  done
fi
}

slackbuild() {
export CFLAGS="$CFLAGS -O2 -g1"
export CXXFLAGS="$CXXFLAGS -O2 -g1"

find "./" -type l -exec sh -c '
    for symlink; do
        resolved_path=$(readlink "$symlink")
        if [ "$resolved_path" = "$symlink" ] || [ ! -e "$resolved_path" ]; then
            echo "Removing problematic symlink: $symlink"
            rm -f "$symlink"
        fi
    done
' sh {} + || true




cmake -B build -G Ninja \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=lib64 \
    -DGLIBC_LOCALE_GEN=OFF \
    -DBUILD_TESTING=OFF \
    -DCMAKE_CXX_FLAGS="-w" -DCMAKE_C_FLAGS="-w" \
    --log-level=WARNING

cmake --build build -- -k0



DESTDIR="$PKG" cmake --install build

	# We don't ship systemd
	rm -r "$PKG"/usr/lib/systemd

	if [ -d "$PKG"/home ]; then
		rm -r "${PKG:?}"/home
	fi

}
